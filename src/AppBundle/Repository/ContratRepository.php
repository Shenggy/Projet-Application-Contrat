<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Contrat;
/**
 * ContratRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContratRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllContrat($numService,$type)
    {
        if($type=='Service'){
            $entityManager = $this->getEntityManager();
            $query = $entityManager->createQuery(
                'SELECT c
        FROM AppBundle\Entity\Contrat c
        WHERE  c.id in (select max(p.id) from AppBundle\Entity\Contrat p GROUP by p.numContratParent having max(p.dateCreation)>\'2018-01-01\' order by p.dateCreation) and c.numService = :service
        GROUP BY c.numContratParent'
            )->setParameter('service', $numService);

            return $query->execute();
        }else{
            $entityManager = $this->getEntityManager();
            $query = $entityManager->createQuery(
                'SELECT c
        FROM AppBundle\Entity\Contrat c
        WHERE  c.id in (select max(p.id) from AppBundle\Entity\Contrat p GROUP by p.numContratParent having max(p.dateCreation)>\'2018-01-01\' order by p.dateCreation) and c.numService = :client
        GROUP BY c.numContratParent'
            )->setParameter('client', $numService);

            // returns an array of Product objects
            return $query->execute();
        }
    }

    public function findSearchContrat($like,$type,$id){
        $li= "%".$like."%";
        $entityManager = $this->getEntityManager();
        if($type=='Service'){
            $query = $entityManager->createQuery(
                'SELECT c
        FROM AppBundle\Entity\Contrat c
        WHERE c.intitule LIKE :resp and c.numService = :serv'
            )->setParameter('resp', $li)->setParameter('serv', $id);
        }else{
            $query = $entityManager->createQuery(
                'SELECT c
        FROM AppBundle\Entity\Contrat c
        WHERE c.intitule LIKE :resp and c.numClient = :serv'
            )->setParameter('resp', $li)->setParameter('serv', $id);
        }


        // returns an array of Product objects
        return $query->execute();
    }
}
